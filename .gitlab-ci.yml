stages:
  - install
  - test
  - build
  - security
cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/

install_dependencies:
  stage: install
  image: node:20
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 hour

test:
  stage: test
  image: node:20
  services:
    - postgres:15
  variables:
    POSTGRES_DB: metro
    POSTGRES_USER: metro
    POSTGRES_PASSWORD: metro
    POSTGRES_HOST_AUTH_METHOD: trust
    PGHOST: postgres
    PGPORT: 5432
    PGUSER: metro
    PGPASSWORD: metro
    PGDATABASE: metro
  dependencies:
    - install_dependencies
  script:
    - npm test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

build:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG -t $IMAGE_LATEST .
    - docker push $IMAGE_TAG
    - docker push $IMAGE_LATEST
  only:
    - main

npm-audit:
  stage: security
  image: node:20
  dependencies:
    - install_dependencies
  script:
    - npm audit --audit-level=moderate
  allow_failure: true
  only:
    - main

docker-scan:
  stage: security
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
  script:
    - docker pull $IMAGE_TAG
    - trivy image --severity HIGH,CRITICAL --exit-code 0 $IMAGE_TAG
  allow_failure: true
  only:
    - main
